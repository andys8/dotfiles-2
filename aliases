alias open_last_capybara_screenshot="ls -1t tmp/capybara/*.png|head -1|xargs open"

alias vim='mvim -v'
alias tig='tig status'

# Universal ctags
# https://ctags.io/
alias tags='ctags -R --languages=ruby --exclude=.git --exclude=log . $(bundle list --paths)'

alias l='ls -laGh'
alias t='tree -C'

function git-branch-name {
  git symbolic-ref HEAD | sed 's/.*\///'
}

concise_logging_format='--pretty=format:%Cblue%h%Creset %cr %Cgreen%an%Creset %s'
color_ruby_words="--color-words='(:|@|@@|\$)?[a-zA-Z_][a-zA-Z0-9_]*[?!]?'"

alias gs='git status'
alias ga='git add'
alias gau='git add -u'
alias gb='git branch -v'
# Remove branches that have already been merged
alias gbc='git branch --merged | egrep -v "(^\*|master|dev)" | xargs git branch -d'
alias gc='git commit -v'
alias gca='git commit --amend'
alias gd='git diff'
alias gco='git checkout'
alias gdc='git diff --cached'
alias gdw="git diff $color_ruby_words"
alias gdcw="git diff --cached $color_ruby_words"
alias gd.="git diff --color-words='.'"
alias gdc.="git diff --cached --color-words='.'"
alias gl='git log --decorate --oneline --graph'
alias glg='gitl --graph'
alias glc='git log "$concise_logging_format"'
alias gls='git log --stat'
alias glcg='gitlc --graph'
alias glg='git log -p -g'
alias glor_raw='git --no-pager log --graph ORIG_HEAD..HEAD "$concise_logging_format"'
alias glpend_raw='git --no-pager log --graph $(git config branch.`git-branch-name`.remote)/`git-branch-name`..HEAD "$concise_logging_format"'
alias glor='echo -e "commits from ${color_red}ORIG_HEAD${color_none} to ${color_red}HEAD${color_none}" && gitlor_raw && echo'
alias glpend='echo -e "commits from ${color_red}$(git config branch.`git-branch-name`.remote)/`git-branch-name`${color_none} to ${color_red}HEAD${color_none}" && gitlpend_raw && echo'
alias glorp='gitlor_raw -p'
#alias gup='git pull && gitlor && git submodule update'
#alias gp='gitup && gitlpend && git push'
#alias gpt='gitp && git push --tags'

#alias git-set-remote='echo git config branch.`git-branch-name`.remote "$1" && echo git config branch.`git-branch-name`.merge "refs/heads/$2"'
